name: Link Branch to Issue
on:
  create:
    branches:
      - '*'

jobs:
  link-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Extract Issue Number
        uses: ./.github/actions/extract-issue  

      # - name: Assign Issue to the Branch Creator
      #   if: env.ISSUE_NUMBER != ''
      #   uses: ./.github/actions/assign-issue
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Link Branch to Issue
      #   if: env.ISSUE_NUMBER != ''
      #   uses: ./.github/actions/link-branch
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get issue ID from GitHub API
        id: get-issue-id
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Content-Type: application/json" \
                      -d "{\"query\":\"query { repository(owner: \\\"tenuckii\\\", name: \\\"workflow\\\") { issue(number: ${{ env.ISSUE_NUMBER }}) { id } } }\"}" \
                      https://api.github.com/graphql)

          echo "GraphQL API Response: $RESPONSE"  # Debugging

          ISSUE_ID=$(echo $RESPONSE | jq -r '.data.repository.issue.id')

          if [[ "$ISSUE_ID" == "null" || -z "$ISSUE_ID" ]]; then
            echo "Issue ID not found. Skipping."
            exit 0
          fi

          echo "ISSUE_ID=$ISSUE_ID" >> $GITHUB_ENV

      - name: Normalize Branch Name
        id: normalize
        run: |
          NORMALIZED_BRANCH="${{ github.ref_name }}"
          NORMALIZED_BRANCH=$(echo "$NORMALIZED_BRANCH" | sed 's/#/-/g')
          echo "NORMALIZED_BRANCH=$NORMALIZED_BRANCH" >> $GITHUB_ENV

      - name: Get branch ID from GitHub API
        id: get-branch-id
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Content-Type: application/json" \
                      -d "{\"query\":\"query { repository(owner: \\\"tenuckii\\\", name: \\\"workflow\\\") { ref(qualifiedName: \\\"refs/heads/${{ env.NORMALIZED_BRANCH }}\\\") { id } } }\"}" \
                      https://api.github.com/graphql)

          echo "GraphQL API Response: $RESPONSE"  # Debugging output

          BRANCH_ID=$(echo $RESPONSE | jq -r '.data.repository.ref.id')

          if [[ "$BRANCH_ID" == "null" || -z "$BRANCH_ID" ]]; then
            echo "Branch ID not found. Skipping."
            exit 0
          fi

          echo "BRANCH_ID=$BRANCH_ID" >> $GITHUB_ENV

      - name: Link branch to issue
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/json" \
               -d "{\"query\":\"mutation LinkBranchToIssue($baseIssueId: ID!, $linkingIds: [ID!]!) { linkRepositoryLinkedBranch(input: {issueId: $baseIssueId, repositoryLinkedBranchIds: $linkingIds}) { clientMutationId } }\",\"variables\":{\"baseIssueId\":\"${{ env.ISSUE_ID }}\",\"linkingIds\":[\"${{ env.BRANCH_ID }}\"]}}" \
               https://api.github.com/graphql
