name: Link Branch to Issue
on:
  create:
    branches:
      - '*'

jobs:
  link-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Extract Issue Number
        uses: ./.github/actions/extract-issue  

      - name: Assign Issue to the Branch Creator
        if: env.ISSUE_NUMBER != ''
        uses: ./.github/actions/assign-issue
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Link Branch to Issue
        if: env.ISSUE_NUMBER != ''
        uses: ./.github/actions/link-branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      
      - name: Fetch Issue ID using GraphQL
        id: fetch-issue-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
        run: |
          OWNER=$(echo $REPO | cut -d '/' -f1)
          REPO_NAME=$(echo $REPO | cut -d '/' -f2)

          QUERY=$(jq -n --arg owner "$OWNER" --arg repo "$REPO_NAME" --arg issue "$ISSUE_NUMBER" \
          '{"query": "query { repository(owner: \($owner), name: \($repo)) { issue(number: \($issue)) { id } } }"}')

          ISSUE_ID=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
                       -H "Content-Type: application/json" \
                       -X POST -d "$QUERY" https://api.github.com/graphql \
                       | jq -r '.data.repository.issue.id')

          if [[ "$ISSUE_ID" == "null" || -z "$ISSUE_ID" ]]; then
          echo "Issue not found, skipping."
          exit 0
          fi

          echo "ISSUE_ID=$ISSUE_ID" >> $GITHUB_ENV

      - name: Link Branch to Issue in Development Section
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_ID: ${{ env.ISSUE_ID }}
          BRANCH_NAME: ${{ github.ref_name }}
          REPO: ${{ github.repository }}
        run: |
          MUTATION='
          mutation {
            addProjectV2ItemById(input: {projectId: "YOUR_PROJECT_ID", contentId: "'"$ISSUE_ID"'"}) {
              item {
                id
              }
            }
          }'
          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
                          -H "Content-Type: application/json" \
                          -X POST -d '{"query": "'"$MUTATION"'"}' https://api.github.com/graphql)

          echo "Response: $RESPONSE"