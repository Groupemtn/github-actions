name: Link Branch to Issue
on:
  create:
    branches:
      - '*'

jobs:
  link-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Extract Issue Number
        uses: ./.github/actions/extract-issue  

      - name: Assign Issue to the Branch Creator
        if: env.ISSUE_NUMBER != ''
        uses: ./.github/actions/assign-issue
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Link Branch to Issue
        if: env.ISSUE_NUMBER != ''
        uses: ./.github/actions/link-branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch Issue ID using GraphQL
        id: fetch-issue-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
        run: |
          OWNER=$(echo $REPO | cut -d '/' -f1)
          REPO_NAME=$(echo $REPO | cut -d '/' -f2)

          echo "Debug: OWNER=$OWNER"
          echo "Debug: REPO_NAME=$REPO_NAME"
          echo "Debug: ISSUE_NUMBER=$ISSUE_NUMBER"

          QUERY=$(jq -n --arg owner "$OWNER" --arg repo "$REPO_NAME" --argjson issue "$ISSUE_NUMBER" \
          '{"query": "query { repository(owner: \"\($owner)\", name: \"\($repo)\") { issue(number: \($issue)) { id } } }"}')

          echo "Debug: QUERY=$QUERY"

          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
                          -H "Content-Type: application/json" \
                          -X POST -d "$QUERY" https://api.github.com/graphql)

          echo "Debug: RESPONSE=$RESPONSE"

          ISSUE_ID=$(echo "$RESPONSE" | jq -r '.data.repository.issue.id')

          if [[ "$ISSUE_ID" == "null" || -z "$ISSUE_ID" ]]; then
            echo "Issue not found, skipping."
            exit 0
          fi

          echo "ISSUE_ID=$ISSUE_ID" >> $GITHUB_ENV

      - name: Link Issue to GitHub Project (Development Section)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_ID: ${{ env.ISSUE_ID }}
          PROJECT_ID: "YOUR_PROJECT_ID" # Replace with your actual project ID
        run: |
          if [[ -z "$ISSUE_ID" ]]; then
            echo "Issue ID is empty. Skipping project linking."
            exit 0
          fi

          # Properly format JSON mutation using jq
          MUTATION=$(jq -n --arg project "$PROJECT_ID" --arg content "$ISSUE_ID" \
          '{"query": "mutation { addProjectV2ItemById(input: {projectId: \($project), contentId: \($content)}) { item { id } } }"}')

          echo "Debug: MUTATION=$MUTATION"

          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
                            -H "Content-Type: application/json" \
                            -X POST -d "$MUTATION" https://api.github.com/graphql)

          echo "Response: $RESPONSE"
